name: ci
on: [push, pull_request]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        svc: [auth-svc, employee-svc]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: 
          python-version: '3.12'
      
      - name: Install Poetry
        run: pipx install poetry
      
      - name: Install dependencies
        run: |
          cd services/${{ matrix.svc }}
          poetry install
      
      - name: Lint (ruff)
        run: |
          cd services/${{ matrix.svc }}
          poetry run ruff check .
        continue-on-error: true
      
      - name: Type check (mypy)
        run: |
          cd services/${{ matrix.svc }}
          poetry run mypy app/ --ignore-missing-imports
        continue-on-error: true
      
      - name: Unit tests (placeholder)
        run: echo "TODO: pytest"; exit 0
      
      - name: Build service image
        run: docker build -t agentichr/${{ matrix.svc }}:ci ./services/${{ matrix.svc }}

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: fs
          severity: CRITICAL,HIGH
          exit-code: '1'
          ignore-unfixed: true
        continue-on-error: true
      
      - name: SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          output-file: docs/compliance/sbom.spdx.json
      
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: docs/compliance/sbom.spdx.json

  api-docs:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Generate API documentation
        run: |
          # Create mock OpenAPI specs for CI
          mkdir -p docs/api/tmp
          echo '{"openapi":"3.0.3","info":{"title":"auth-svc"},"paths":{"/auth/login":{"post":{"summary":"Login"}}},"components":{"schemas":{"LoginRequest":{"type":"object"}}}}' > docs/api/tmp/auth.json
          echo '{"openapi":"3.0.3","info":{"title":"employee-svc"},"paths":{"/employee/v1/employees":{"get":{"summary":"List employees"}}},"components":{"schemas":{"Employee":{"type":"object"}}}}' > docs/api/tmp/employee.json
          python3 scripts/merge_openapi.py docs/api/tmp/*.json > docs/api/agentichr-openapi.json
      
      - name: Upload API docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-docs
          path: docs/api/agentichr-openapi.json

  lint-all:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install ruff
        run: pipx install ruff
      
      - name: Lint all Python code
        run: ruff check .
        continue-on-error: true
