{
  "realm": "agentichr",
  "enabled": true,
  "displayName": "AgenticHR",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>AgenticHR</span></div>",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "defaultRoles": [
    "offline_access",
    "uma_authorization",
    "default-roles-agentichr"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "AgenticHR",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "AgenticHR",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "username": "admin@agentichr.local",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "System",
      "lastName": "Administrator",
      "email": "admin@agentichr.local",
      "credentials": [
        {
          "type": "password",
          "value": "admin",
          "temporary": false
        }
      ],
      "realmRoles": [
        "default-roles-agentichr"
      ],
      "clientRoles": {
        "agentichr-gw": [
          "hr.admin",
          "employee.admin"
        ]
      }
    },
    {
      "username": "hr.manager@agentichr.local",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "HR",
      "lastName": "Manager",
      "email": "hr.manager@agentichr.local",
      "credentials": [
        {
          "type": "password",
          "value": "hrmanager",
          "temporary": false
        }
      ],
      "realmRoles": [
        "default-roles-agentichr"
      ],
      "clientRoles": {
        "agentichr-gw": [
          "hr.manager",
          "employee.manager"
        ]
      }
    },
    {
      "username": "employee@agentichr.local",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Test",
      "lastName": "Employee",
      "email": "employee@agentichr.local",
      "credentials": [
        {
          "type": "password",
          "value": "employee",
          "temporary": false
        }
      ],
      "realmRoles": [
        "default-roles-agentichr"
      ],
      "clientRoles": {
        "agentichr-gw": [
          "employee.self"
        ]
      }
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "default-roles-agentichr",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        }
      }
    ],
    "client": {
      "agentichr-gw": [
        {
          "name": "hr.admin",
          "description": "Full HR administrative access"
        },
        {
          "name": "hr.manager",
          "description": "HR manager access"
        },
        {
          "name": "employee.admin",
          "description": "Employee administration access"
        },
        {
          "name": "employee.manager",
          "description": "Employee manager access"
        },
        {
          "name": "employee.self",
          "description": "Employee self-service access"
        },
        {
          "name": "agent.leave.requester",
          "description": "Agent role for leave requests"
        },
        {
          "name": "agent.timesheet.approver",
          "description": "Agent role for timesheet approvals"
        },
        {
          "name": "agent.payroll.processor",
          "description": "Agent role for payroll processing"
        }
      ]
    }
  },
  "clients": [
    {
      "clientId": "agentichr-gw",
      "name": "AgenticHR Gateway",
      "description": "Main gateway client for AgenticHR services",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "agentichr-gateway-secret",
      "redirectUris": [
        "http://localhost:8000/*",
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "http://localhost:8000",
        "http://localhost:3000"
      ],
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "aud",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "agentichr-gw",
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "claim.name": "roles",
            "jsonType.label": "String",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true",
            "multivalued": "true"
          }
        },
        {
          "name": "tenant_id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "tenant_id",
            "claim.name": "tenant_id",
            "jsonType.label": "String",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "agentichr-agents",
      "name": "AgenticHR Agents",
      "description": "Client for AI agents integration",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "agentichr-agents-secret",
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "protocol": "openid-connect",
      "attributes": {
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "aud",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "agentichr-agents",
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "agentichr-scope",
      "description": "AgenticHR specific scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "agentichr-audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "agentichr-gw",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "rsa-generated",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "enabled": [
            "true"
          ],
          "active": [
            "true"
          ],
          "algorithm": [
            "RS256"
          ],
          "keySize": [
            "2048"
          ],
          "privateKey": [
            "MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCVJliWqa1j2m3WQFod4F15fCPo+pwPKbORxUzg9zKK2kBbhO06BoIGjChJqkfzxaQ2EA/eBRFiT7THDcjeVC0FsQEp2CO8ZnH7k9vQdwsXSWP23Rzz7Gsfd5heXxxenqO8jWROMLWn8kBcyfG0096M+jpGW3X5KB4FMI/nEQ0vbk8DRbl3SFmFwEVYPZVNGRnKL6ENql9rLI80YH4abwhAGy0bmhy4QJJOT6ddcXdIst/CPXBQ2Ocojn++K4XLnaU0ObqU+GVk3Upn+vS4HZsH3WZgEJFOSYXnFsJAVgRdvyjY/NJQAxCmMEheUe3qoJlGcpnZae+pTwoPQfRCFs59AgMBAAECggEAM08tQ6tciFDg30dlGQkR7xSLP/9Sx46XhUrEH1I683SQlktc1szdV0ZJJ8pqFU0FKEoPQ1gn+lOkQ6QU2ZNIp8AUP+JorMvrY1oi0Qza5mhreMXpS2qmEX2xj6mVl2Fov5k+i/2KyJt4k9MvEP+f/IyqloCpTY0FAtEJeDqv+AQqauJpqTamLVAWGQn9Vpt/4G5PxhelxpFHZuZGhPRA7IQiwHpzGE0Qdlx9Ie08/MqlKsbhqJEj7BW+uM73K56ck8h7P2rSfWWvY+f+M3EBSUdxErxXEkk7aAy05TvMt0J9JlH46r90VswuekjSiRZlKYs3QAJD5nxitdqU/Hl5SwKBgQC2Tw/95GrcCxwEgJHI/8kTuhnSvm2VSWJW/EP4Nddkxk2p9UUgCqGeLVSiHxxR4+4c/vlPX94VU7UtUsB6hWJlMeOx52GZsiIxKKyI354/P5M5UJ6vSGW2H0iyDSPhI3KcXrPiIhBGxurMnYAJjqGQ+1z/1rBOWodPua6UCV1ZKwKBgQDRcA32QnbCOivxwTdIMXvZB8nRMGYPZkxv3fsFhLnopuXTWmoLL9MkntOXSM8TNtewkr8XOOF4W83/alCJVaR0slit4WUEabkbt0bnNflC4MeNSOJZT0FuDshYxPA5NcE4ctLLWP73Mp2TnaC+qB6kMJ+U/UB+BoVEEjcxkGJS9wKBgEs0hDlNL9PD9XPaAcmz0qQDokFwcs4hrqKJgBR1SXx13XXeCvzzxcX1lzMluE4Dw6dMe1YGCxwrItMmjuY7/eIW2YH7HCUF+drjl4EDFkmrFTWQj1VpfSPK9fcVOpbWQ6JD4trHCIXZ6uQrmLTYlMe1GaEkVCiOacE2rNC+qDZvAoGAA+vQJxspdAt4xSbz7QMYKYEO0z7PulwU9Ec4qurIPEXbqbBYqer0Tgw3M+7mCZsOQL0OnNWwyvsVCUIpTdjvokuwg1jj9kgwcgdlaXDGQO1Kbye9LSThubjHIXpWcQvDmVX1Al+hLmmhL6FU4Bzvre1HH5f6PCHNHvAkXmYwoRMCgYAwodDGlrugxgwb0yaG7YbWGrMm3LH7wg36Q+lZ0azs3GgcDb9Pz8Q84EKQFnUrbfMK2ozfmWaMNq1gD05Bss9MIW5/jVPF/jgXK3gOG7K21B9O4HJXCAa/zqbM9So+54FkTVHYRLt6DLt8GHZFV0cq3JfHUnd+bcZuuGLhf3W6QQ=="
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "alias": "AgenticHR MFA Flow",
      "description": "Multi-factor authentication flow with TOTP and WebAuthn",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "webauthn-authenticator",
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": true,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    }
  ],
  "browserFlow": "AgenticHR MFA Flow",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5"
  },
  "keycloakVersion": "23.0.0",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}